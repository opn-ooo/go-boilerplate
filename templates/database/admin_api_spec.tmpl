openapi: 3.0.0
info:
  title: AdminAPI
  version: '1.0'
servers:
  - url: 'http://localhost:3000'
paths:
{{- range .Entities}}
  /{{ .Name.Original }}:
    get:
      summary: Get {{ .Name.Singular.Snake }} entities
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/{{ .Name.Original }}'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/status'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/status'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/status'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/status'
      operationId: get-{{ .Name.Original }}
      description: ''
      parameters:
        - schema:
            type: integer
          in: query
          name: offset
        - schema:
            type: string
          in: query
          name: limit
        - schema:
            type: string
          in: query
          name: order
        - schema:
            type: string
          in: query
          name: direction
        - schema:
            type: string
          in: query
          name: search
    post:
      summary: Create {{ .Name.Singular.Snake }} entity
      operationId: post-{{ .Name.Original }}
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/{{ .Name.Singular.Snake }}'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/status'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/status'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/status'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/status'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/{{ .Name.Singular.Snake }}_update'
  '/{{ .Name.Original }}/{id}':
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
    get:
      summary: Your GET endpoint
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/{{ .Name.Singular.Snake }}'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/status'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/status'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/status'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/status'
      operationId: get-{{ .Name.Original }}-id
    put:
      summary: ''
      operationId: put-{{ .Name.Original }}-id
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/{{ .Name.Singular.Snake }}'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/status'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/status'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/status'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/status'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/{{ .Name.Singular.Snake }}_update'
    delete:
      summary: ''
      operationId: delete-{{ .Name.Original }}-id
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/status'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/status'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/status'
{{- end }}
  /auth/token:
    post:
      summary: ''
      operationId: post-auth-token
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/access_token'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/status'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/status'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/status'
      description: Get new access token ( Sign in )
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/credential'
        description: ''
    delete:
      summary: ''
      operationId: delete-auth-token
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/status'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/status'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/status'
      description: Delete access token ( Sign out )
components:
  schemas:
{{- range .Entities}}
    {{ .Name.Singular.Snake }}:
      title: {{ .Name.Singular.Snake }}
      type: object
      properties:
{{- range .Columns }}
{{ if .APIReturnable }}        {{ .Name.Original }}:
          type: {{ .APIType }}{{end -}}
{{ end }}
        created_at:
          type: integer
        updated_at:
          type: integer
      required:
{{- range .Columns }}
{{ if .APIReturnable }}        - {{ .Name.Original }}{{ end -}}
{{ end }}
    {{ .Name.Original }}:
      title: {{ .Name.Original }}
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/{{ .Name.Singular.Snake }}'
        total_count:
          type: integer
      required:
        - {{ .Name.Original }}
        - count
        - offset
        - limit
    {{ .Name.Singular.Snake }}_update:
      title: {{ .Name.Singular.Snake }}_update
      type: object
      properties:
{{- range .Columns }}
{{ if .APIUpdatable }}        {{ .Name.Original }}:
          type: {{ .APIType }}{{ end -}}
{{ end }}
{{- end }}
    access_token:
      title: access_token
      type: object
      properties:
        access_token:
          type: string
          description: ' The access token string as issued by the server.'
        token_type:
          type: string
          description: 'The type of token this is, always "bearer"'
      required:
        - access_token
        - token_type
    status:
      title: status
      type: object
      properties:
        success:
          type: boolean
        errors:
          type: string
    error:
      title: error
      type: object
      properties:
        code:
          type: string
        debugMessage:
          type: string
        userMessage:
          type: string
      required:
        - code
    credential:
      title: credential
      type: object
      properties:
        email:
          type: string
        password:
          type: string
      required:
        - email
        - password
